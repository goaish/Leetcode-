/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* constructFromPrePost(vector<int>& pre, vector<int>& post) {
        int aish=0;
        return construct(pre, post, aish, 0, pre.size() - 1);

        
    }
    private :
    TreeNode* construct(vector<int>& pre, vector<int>& post , int& aish , int l , int h){
        if( aish >= pre.size() || l>h){
            return nullptr;
        }
        TreeNode* root = new TreeNode(pre[aish++]);
        if(l==h) return root;
        int i=l;
        while(i<=h && post[i] != pre[aish]) i++;

        if(i<=h){
            root->left = construct(pre, post , aish , l , i);
            root->right = construct(pre, post , aish , i+1 , h-1);
        }
        return root;
    }
};
